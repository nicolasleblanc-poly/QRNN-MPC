The following modules were not unloaded:
  (Use "module --force purge" to unload all):

  1) CCconfig        6)  ucx/1.14.1         11) flexiblas/3.3.1
  2) gentoo/2023     7)  libfabric/1.18.0   12) imkl/2023.2.0
  3) gcccore/.12.3   8)  pmix/4.2.4         13) StdEnv/2023
  4) gcc/12.3        9)  ucc/1.2.0
  5) hwloc/2.9.1     10) openmpi/4.1.5
/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/pytorch_icem/icem.py:69: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self.sigma = torch.tensor(self.sigma).to(device=self.device)
bootstrapping finished 

Traceback (most recent call last):
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/MuJoCoPusher_approximate_continuous.py", line 150, in <module>
    total_reward, data = icem.run_icem(icem_gym, seed, env, train, iter=max_steps, render=False)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/pytorch_icem/icem.py", line 220, in run_icem
    action = ctrl.command(state)
             ^^^^^^^^^^^^^^^^^^^
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/pytorch_icem/icem.py", line 170, in command
    costs = self._cost(pred_x, U)
            ^^^^^^^^^^^^^^^^^^^^^
  File "/home/nileb3/myenv/lib/python3.11/site-packages/arm_pytorch_utilities/tensor_utils.py", line 69, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/pytorch_icem/icem.py", line 116, in _cost
    return self.trajectory_cost(x, u)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/pytorch_icem/icem.py", line 11, in _accumulate_running_cost
    cost = running_cost(x, u)
           ^^^^^^^^^^^^^^^^^^
  File "/project/6086407/nileb3/QRNN-MPC/New Files July 23/icem/MuJoCoPusher_approximate_continuous.py", line 54, in running_cost
    cost = torch.norm(state[:, 14:17]-state[:, 17:20], dim=1)+torch.norm(state[:, 17:20]-state[:, 20:], dim=1)+0.1*(torch.norm(action, dim=1))**2
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RuntimeError: The size of tensor a (23) must match the size of tensor b (7) at non-singleton dimension 1
